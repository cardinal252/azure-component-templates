{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "testaasd1",
      "metadata": {
        "description": "The prefix for the deployment"
      }
    },    
    "certificatePfxBase64": {
      "type": "securestring",
      "metadata": {
        "description": "The base-64 encoded SSL certificate PFX data. Must be supplied via a parameters file references to a Key Vault / Secret Name."
      }
    },
    "certificatePfxPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the SSL certificate"
      }
    },    
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-ag-vnet')]",
      "metadata": {
        "description": "Virtual Network name"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Virtual Network address range"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "ApplicationGatewaySubnet",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet address range"
      }
    },
    "applicationGatewayName": {
      "type": "string",
      "defaultValue": "[concat(parameters('prefix'), '-ag')]",
      "metadata": {
        "description": "Application Gateway name"
      }
    },
    "minCapacity": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Minimum instance count for Application Gateway"
      }
    },
    "frontendPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "Application Gateway Frontend port"
      }
    },
    "backendPort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "Application gateway Backend port"
      }
    },
    "backendIPAddresses": {
      "type": "array",
      "defaultValue": [
        {
          "IpAddress": "10.0.0.4"
        },
        {
          "IpAddress": "10.0.0.5"
        }
      ],
      "metadata": {
        "description": "Back end pool ip addresses"
      }
    },
    "cookieBasedAffinity": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Disabled",
      "metadata": {
        "description": "Cookie based affinity"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "appGwPublicIpName": "[concat(parameters('applicationGatewayName'), '-ip')]",
    "appGwPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appGwPublicIpName'))]",
    "appGwSize": "WAF_v2",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-08-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('appGwPublicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "apiVersion": "2018-08-01",
      "name": "[parameters('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('appGwPublicIPRef')]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "sku": {
          "name": "WAF_v2",
          "tier": "WAF_v2",
          "capacity": 2
        },
        "sslCertificates": [
          {
            "name": "default-ssl",
            "properties": {
              "data": "[parameters('certificatePfxBase64')]",
              "password": "[parameters('certificatePfxPassword')]"
            }
          }
        ],        
        "gatewayIPConfigurations": [
          {
            "name": "gateway-ip",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "webApplicationFirewallConfiguration": {
          "enabled": true,
          "firewallMode": "Prevention",
          "ruleSetType": "OWASP",
          "ruleSetVersion": "3.0",
          "disabledRuleGroups": [
            {
              "ruleGroupName": "REQUEST-920-PROTOCOL-ENFORCEMENT"
            }
          ],
          "exclusions": [],
          "requestBodyCheck": true,
          "maxRequestBodySizeInKb": 128,
          "fileUploadLimitInMb": 100
        },
        "enableHttp2": false,
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('appGwPublicIpRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "https",
            "properties": {
              "port": 443
            }
          },
          {
            "name": "http",
            "properties": {
              "port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "empty-pool",
            "properties": {}
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "default-settings",
            "properties": {
              "port": 443,
              "protocol": "Https",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": true,
              "affinityCookieName": "ApplicationGatewayAffinity",
              "requestTimeout": 20,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/probes/primary')]"
              }
            }
          },
        ],  
        "probes": [
          {
            "name": "primary",
            "properties": {
              "protocol": "Https",
              "path": "/",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": true,
              "minServers": 0,
              "match": {
                "statusCodes": [
                  "200-399"
                ]
              }
            }
          },
        ],              
        "httpListeners": [
          {
            "name": "https-listener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "frontendPort": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/https')]"
              },
              "protocol": "Https",
              "sslCertificate": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/sslCertificates/default-ssl')]"
              },
              "hostNames": [],
              "requireServerNameIndication": false
            }
          },
          {
            "name": "https-redirect-listener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "frontendPort": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendPorts/http')]"
              },
              "protocol": "Http",
              "hostNames": [],
              "requireServerNameIndication": false
            }
          }
        ],
        "redirectConfigurations": [
          {
            "name": "https-redirect",
            "properties": {
              "redirectType": "Permanent",
              "targetListener": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/https-listener')]"
              },
              "includePath": true,
              "includeQueryString": true,
              "requestRoutingRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/requestRoutingRules/https-redirect-rule')]"
                }
              ]
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "https-redirect-rule",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/httpListeners/https-redirect-listener')]"
              },
              "redirectConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/redirectConfigurations/https-redirect')]"
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "frontEndIP": {
      "type":"string",
      "value": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGatewayName')), '/frontendIPConfigurations/appGatewayFrontendIP')]"
    }
  }
}